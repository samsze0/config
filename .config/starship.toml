"$schema" = 'https://starship.rs/config-schema.json'

format = """
$directory\
$git_branch\
$git_commit\
$git_state\
$git_metrics\
$git_status\
$nix_shell\
$kubernetes\
$container\
$docker_context\
$package\
$c\
$cmake\
$crystal\
$cobol\
$daml\
$dart\
$deno\
$dotnet\
$elixir\
$elm\
$erlang\
$fennel\
$golang\
$guix_shell\
$haskell\
$haxe\
$helm\
$java\
$julia\
$kotlin\
$gradle\
$lua\
$nim\
$nodejs\
$ocaml\
$opa\
$perl\
$php\
$pulumi\
$purescript\
$python\
$raku\
$rlang\
$red\
$ruby\
$rust\
$scala\
$solidity\
$swift\
$terraform\
$typst\
$vlang\
$vagrant\
$zig\
$conda\
$meson\
$aws\
$gcloud\
$azure\
$direnv\
$env_var\
$shell\
$custom\
$hostname\
$localip\
$cmd_duration\

$line_break\

$jobs\
$time\
$status\
$os\
$character
"""

[battery]
disabled = true

[memory_usage]
threshold = 50
format = '[$symbol$ram]($style) '
style = 'bright-black '
symbol = 'Mem '
disabled = false

[username]
# Show if current user is root/admin or connected as SSH
# https://starship.rs/config/#username
format = '[$user]($style) '
style_root = 'bright-black '
style_user = 'bright-black '
show_always = false
disabled = false

[hostname]
# https://starship.rs/config/#hostname
ssh_only = true
ssh_symbol = '⋅ '
trim_at = '.'
format = '[$ssh_symbol$hostname]($style) '
style = 'bright-yellow '
disabled = false

[localip]
ssh_only = true
format = '⋅ [$localipv4]($style) '
style = 'bright-yellow '
disabled = false

[character]
format = '$symbol '
success_symbol = '[❯](bold blue)'
error_symbol = '[❯](bold red)'
vimcmd_symbol = '[❮](bold blue)'
vimcmd_visual_symbol = '[❮](bold yellow)'
vimcmd_replace_symbol = '[❮](bold red)'
vimcmd_replace_one_symbol = '[❮](bold red)'
disabled = false

[jobs]
threshold = 1
symbol_threshold = 1
number_threshold = 1
format = '[$symbol$number]($style) '
symbol = '✦'
style = ' blue'
disabled = false

[aws]
disabled = true

[azure]
disabled = true

[cmd_duration]
disabled = false
min_time = 0
format = '⋅ [$duration]($style) '
style = 'bright-black '
show_milliseconds = false
show_notifications = false
min_time_to_notify = 45000

[nix_shell]
disabled = false
format = '⋅ [$symbol$state( \($name\))]($style)'
symbol = 'Nix '
style = ' blue'
impure_msg = 'impure'
pure_msg = 'pure'

[package]
disabled = true

[docker_context]
disabled = false
symbol = '󰡨 '
style = 'blue '
format = '⋅ [$symbol$context]($style) '
only_with_files = true
detect_extensions = []
detect_files = ['docker-compose.yml', 'docker-compose.yaml', 'Dockerfile']
detect_folders = []

[container]
disabled = true
symbol = '⬢ '
format = '[$symbol \[$name\]]($style) '
style = ' blue'

[directory]
disabled = false
style = 'bright-black '

[git_status]
disabled = false
format = '([$all_status$ahead_behind]($style) )'
style = ' bright-black'
ahead = '⇡'
behind = '⇣'
stashed = ''
up_to_date = ''
diverged = 'ʏ'
conflicted = 'C'
deleted = 'D'
renamed = 'R'
modified = '!'
staged = '+'
untracked = '?'
ignore_submodules = true

[git_state]
disabled = false
rebase = 'REBASING'
merge = 'MERGING'
revert = 'REVERTING'
cherry_pick = 'CHERRY-PICKING'
bisect = 'BISECTING'
style = ' bright-black'
format = '([$state( $progress_current/$progress_total)]($style) )'

[git_branch]
disabled = false
format = '⋅ [$symbol$branch(:$remote_branch)]($style) '
symbol = ' '
style = ' blue'

[git_metrics]
added_style = ' blue'
deleted_style = ' red'
only_nonzero_diffs = true
format = '([+$added]($added_style) )([-$deleted]($deleted_style) )'
disabled = true

[helm]
format = '⋅ [$symbol($version )]($style) '
version_format = 'v${raw}'
symbol = 'Helm '
style = ' blue'
disabled = false
detect_extensions = []
detect_files = ['helmfile.yaml', 'Chart.yaml']
detect_folders = []

[kubernetes]
symbol = '󱃾 '
format = '⋅ [$symbol$context( \($namespace\))]($style) '
style = ' blue'
disabled = false
detect_extensions = []
detect_files = []
detect_folders = []

[custom.kubernetes]
disabled = true
command = 'kubectl config current-context'
symbol = '󱃾 '
format = '⋅ [$symbol($output )]($style) '
style = ' blue'
when = 'command -v kubectl'

[terraform]
format = '⋅ [$symbol$workspace]($style) '
version_format = 'v${raw}'
symbol = 'Terraform '
style = ' blue'
disabled = false
detect_extensions = ['tf', 'tfplan', 'tfstate']
detect_files = []
detect_folders = ['.terraform']

[pulumi]
format = '⋅ [$symbol($username@)$stack]($style) '
version_format = 'v${raw}'
symbol = 'Pulumi '
style = 'blue'
disabled = false
search_upwards = true

[python]
disabled = false
pyenv_version_name = true
pyenv_prefix = ''
format = '⋅ [${symbol}${pyenv_prefix}(${version} )]($style)[($virtualenv )]( bright-black)'
version_format = 'v${raw}'
style = 'blue '
symbol = 'Python '

[rust]
disabled = false
format = '⋅ [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'Rust '
style = ' blue'
detect_extensions = ['rs']
detect_files = ['Cargo.toml']
detect_folders = []

[java]
disabled = false
format = '⋅ [$symbol($version )]($style)'
version_format = 'v${raw}'
style = ' blue'
symbol = 'Java '
detect_extensions = ['java', 'class', 'jar', 'gradle', 'clj', 'cljc']
detect_files = [
  'pom.xml',
  'build.gradle.kts',
  'build.sbt',
  '.java-version',
  'deps.edn',
  'project.clj',
  'build.boot',
]
detect_folders = []

[kotlin]
disabled = false
format = '⋅ [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'Kotlin '
style = ' blue'
kotlin_binary = 'kotlin'
detect_extensions = ['kt', 'kts']
detect_files = []
detect_folders = []

[gradle]
disabled = false
format = "⋅ [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "Gradle "
style = "blue "
recursive = false
detect_extensions = ["gradle", "gradle.kts"]
detect_files = []
detect_folders = ["gradle"]

[typst]
disabled = false
format = '⋅ [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'Typst '
style = ' blue'
detect_extensions = ['typ']
detect_files = []
detect_folders = []

[c]
disabled = false
format = '⋅ [($name )($version )]($style)'
version_format = 'v${raw}'
style = 'blue '
symbol = 'C '
detect_extensions = ['c', 'h']
detect_files = []
detect_folders = []
commands = [['cc', '--version'], ['gcc', '--version'], ['clang', '--version']]

[cmake]
disabled = false
format = '⋅ [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'CMake '
style = ' blue'
detect_extensions = []
detect_files = ['CMakeLists.txt', 'CMakeCache.txt']

[golang]
disabled = false
format = '⋅ [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'Go '
style = ' blue'
detect_extensions = ['go']
detect_files = [
  'go.mod',
  'go.sum',
  'go.work',
  'glide.yaml',
  'Gopkg.yml',
  'Gopkg.lock',
  '.go-version',
]
detect_folders = ['Godeps']

[lua]
disabled = false
format = '⋅ [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'Lua '
style = ' blue'
lua_binary = 'lua'
detect_extensions = ['lua']
detect_files = ['.lua-version']
detect_folders = ['lua']

[nodejs]
disabled = false
format = '⋅ [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'Node '
style = ' blue'
not_capable_style = ' red'
detect_extensions = ['js', 'mjs', 'cjs', 'ts', 'mts', 'cts']
detect_files = ['package.json', '.node-version', '.nvmrc']
detect_folders = ['node_modules']

[swift]
disabled = false
format = '⋅ [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'Swift '
style = ' blue'
detect_extensions = ['swift']
detect_files = ['Package.swift']
detect_folders = []

[ruby]
disabled = false
format = '⋅ [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'Ruby '
style = ' blue'
detect_extensions = ['rb']
detect_files = ['Gemfile', '.ruby-version']
detect_folders = []
detect_variables = ['RUBY_VERSION', 'RBENV_VERSION']

[zig]
disabled = false
format = '⋅ [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = 'Zig '
style = ' blue'
detect_extensions = ['zig']
detect_files = []
detect_folders = []

[shell]
bash_indicator = 'bash'
zsh_indicator = 'zsh'
nu_indicator = 'nu'
fish_indicator = '󰈺'
format = '⋅ [$indicator ]($style)'
powershell_indicator = '_'
unknown_indicator = '?'
style = ' bright-black'
disabled = false

# https://starship.rs/config/#custom-commands
# https://github.com/starship/starship/discussions/1252

[custom.osx]
command = 'arch'
symbol = ' '
format = '⋅ [$symbol($output )]($style)'
style = ' bright-black'
when = '[[ "$(uname)" == "Darwin" ]]'

[custom.linux]
command = 'arch'
symbol = ' '
format = '⋅ [$symbol($output )]($style)'
style = ' bright-black'
when = '[[ "$(uname)" == "Linux" ]]'
